
What happens when you initialize a repository? Why do you need to do it?

  The .git folder and metadata files are created. Git uses these to manage
  the repository.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

  Use 'git add' to add a file to the staging area. This changes the status of
  the file from untracked to tracked, so Git can manage it. We use 'git commit'
  to take a checkpoint of the repository files in the working directory.

How can you use the staging area to make sure you have one commit per logical
change?

  Use 'git add' only on the files related to that one logical change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

  A branch is helpful when you want to try something without affecting the master branch.

How do the diagrams help you visualize the branch structure?

  It is a pictorial representation of past work in the repository.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

  The contents/changes of one branch are added into the contents of the other branch.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?

  Pro's: speed
  Con's: Git may not choose correctly. Can still require manual resolution to conflicts.

